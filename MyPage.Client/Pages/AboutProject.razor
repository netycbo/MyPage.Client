@page "/aboutProject"
@using System.Text.Json
@inject HttpClient Http
@layout MainLayout
@inject IMiddlewareLogging Logging

<div class="containerAbout main-text-container">
    <div class="main-text">
        <h2>Litt mer om prosjektet</h2>
        <p>
            Prosjektet består av en Blazor WebAssembly (standalone) frontend og Azure Functions som backend. Applikasjonen er hostet på Azure Static Web Apps.
            Jeg brukte Azure Application Insights for feilsøking og overvåking.
            Siden Blazor WebAssembly kjører i nettleseren, støtter den ikke server-side logikk direkte. Derfor sendes logger fra frontend til Azure Functions. Derfra videresendes de til Application Insights.
            Domenenavn og SMTP-server er levert av andre aktører, på grunn av lavere kostnader.
            Jeg utviklet et egendefinert verktøy for å telle besøk på forsiden. Jeg laget også funksjoner for å overvåke antall sendte e-poster og hvor lenge brukeren er aktiv på siden.
            Basert på disse verktøyene skrev jeg Kusto-spørringer for å hente data og analysere feil i Application Insights.
        </p>
        <p>
            Er du fornøyd med det du ser? Tror du at jeg kan være til nytte i din bedrift? <a href="/#contact">Skriv</a> gjerne til meg.
        </p>
        <p>
            Nedenfor finner du noen sanntidsdata hentet fra Azure Application Insights.
        </p>
    </div>
</div>

<div class="containerAbout grid-container">
    <div class="grid-item">
        <h3>Total page visits since deployment (02.07.2025)</h3>
        <p>@GetTotalVisits</p>
    </div>
    <div class="grid-item">
        <h3>Emails sent (hopefully with job offers)</h3>
        <p>@GetTotalEmailsSent</p>
    </div>
    <div class="grid-item">
        <h3>Visits this week vs. last week (in %)</h3>
        <p>@WeekToWeekVisits</p>
    </div>
    <div class="grid-item">
        <h3>Average visit duration (in minutes)</h3>
        <p>@AvarageVisitDuration</p>
    </div>
</div>



@code {
    private int GetTotalVisits { get; set; }
    private int GetTotalEmailsSent { get; set; }
    private int WeekToWeekVisits { get; set; }
    private int AvarageVisitDuration { get; set; }

    protected override async Task OnInitializedAsync()
    {
        GetTotalVisits = await Logging.GetIntValueAsync("/api/GetTotalVisit", "total", 0, "GetAvarageVisitDuration");
        GetTotalEmailsSent = await Logging.GetIntValueAsync("/api/GetTotalEmailsSent", "totalEmailsSent", 0, "GetTotalEmailsSent");
        WeekToWeekVisits = await Logging.GetIntValueAsync("/api/GetWeekToWeekVisits", "weekToWeekVisits", 0, "GetWeekToWeekVisits");
        AvarageVisitDuration = await Logging.GetIntValueAsync("/api/GetAvarageVisitDuration", "avarageVisitDuration", 2, "GetAvarageVisitDuration");
    }
}


